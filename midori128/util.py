import numpy as np
DDT  = np.array([[16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 2, 4, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0],
                 [0, 4, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0],
                 [0, 0, 0, 0, 2, 0, 4, 2, 2, 2, 0, 0, 0, 2, 0, 2],
                 [0, 2, 4, 2, 2, 2, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0],
                 [0, 2, 0, 0, 2, 0, 0, 4, 0, 2, 4, 0, 2, 0, 0, 0],
                 [0, 2, 0, 4, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 2],
                 [0, 0, 0, 2, 0, 4, 2, 0, 0, 0, 0, 2, 0, 4, 2, 0],
                 [0, 2, 0, 2, 2, 0, 2, 0, 0, 2, 0, 2, 2, 0, 2, 0],
                 [0, 0, 4, 2, 0, 2, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0],
                 [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 4],
                 [0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 0, 4, 0, 2, 0, 2],
                 [0, 0, 4, 0, 0, 2, 2, 0, 2, 2, 0, 0, 2, 0, 2, 0],
                 [0, 0, 0, 2, 0, 0, 2, 4, 0, 0, 4, 2, 0, 0, 2, 0],
                 [0, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 2, 4, 2],
                 [0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 4, 2, 0, 0, 2, 4]],
                 dtype=np.uint8)
RC = np.array([[0,0,0,1,0,1,0,1,1,0,1,1,0,0,1,1],
               [0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0],
               [1,0,1,0,0,1,0,0,0,0,1,1,0,1,0,1],
               [0,1,1,0,0,0,1,0,0,0,0,1,0,0,1,1],
               [0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1],
               [1,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0],
               [0,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0],
               [0,0,0,0,1,0,1,1,1,1,0,0,1,1,0,0],
               [1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1],
               [0,1,0,0,0,0,0,0,1,0,1,1,1,0,0,0],
               [0,1,1,1,0,0,0,1,1,0,0,1,0,1,1,1],
               [0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,0],
               [0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0],
               [1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,0],
               [1,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0],
               [0,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1],
               [0,0,0,1,1,1,0,0,0,0,1,0,0,1,0,0],
               [0,0,1,0,0,0,1,1,1,0,1,1,0,1,0,0],
               [0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0]],
               dtype=np.uint8)
# 0, 10, 5, 15,
# 14, 4, 11, 1,
# 9, 3, 12, 6,
# 7, 13, 2, 8
sr_mapping = np.array([0, 10, 5, 15, 14, 4, 11, 1, 9, 3, 12, 6, 7, 13, 2, 8])
sri_mapping = np.array([0, 7, 14, 9, 5, 2, 11, 12, 15, 8, 1, 6, 10, 13, 4, 3])
mixing_mat = np.array([
            [0, 1, 1, 1],
            [1, 0, 1, 1],
            [1, 1, 0, 1],
            [1, 1, 1, 0],])
def do_shift_rows(state):
    return state[sr_mapping]
def do_shift_rows_inv(state):
    return state[sri_mapping]
# def do_mix_cols(state):
#     state_2d = state.reshape(4, 4)
#     print(f'{state_2d = }')
#     result = np.zeros_like(state_2d)
#     for col in range(4):
#         result[col, :] = np.bitwise_xor.reduce(mixing_mat * state_2d[col, :], axis=-1)
#     return result
# def do_linear_layer(state):
#     state = do_shift_rows(state)
#     state = do_mix_cols(state)
#     return state.flatten()